/// In this version of the engine, you can not change the name of the fields.
/// In the future, you will be able to have a configuration file that maps the input device controllers to the fields.

/// In this file it is only input that is mapped to input devices. Either from Steam Input API, or from a configuration file.

/// Fengrove provides this input for us. It matches the input from the input API.
/// If not using steam input, you need to specify the input in a configuration file.
struct ShipMovement {
    move: (Float, Float),
    fire: Bool,
    secondaryfire: Bool,
    menu: Bool,
}


/// Fengrove provides this input for us. It matches the input from the input API.
/// If not using steam input, you need to specify the input in a configuration file.
struct MenuInput {
    up: Bool,
    down: Bool,
    left: Bool,
    right: Bool,
    select: Bool,
    back: Bool,
}


enum ActionSets {
    ShipMovement ShipMovement,
    Menu MenuInput,
}

struct NextPlayerInput {
    sets: ActionSets,
}

/// In this version of the engine, you can not change the name of the fields.
/// In the future, you will be able to have a configuration file that maps the input device controllers to the fields.
struct PlayerInput {
	mouse_cursor_position: (Int, Int),
	mouse_left_button: Bool,
	mouse_right_button: Bool,
}


impl PlayerInput {
    fn new() -> PlayerInput {
        PlayerInput {
                mouse_cursor_position: (0, 0),
                mouse_left_button: false,
                mouse_right_button: false,
            }
    }
}




// TODO: Handle overlays
